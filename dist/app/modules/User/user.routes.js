"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRoutes = void 0;
const express_1 = __importDefault(require("express"));
const user_controllers_1 = require("./user.controllers");
const validationRequest_1 = __importDefault(require("../../middlewares/validationRequest"));
const user_validations_1 = require("./user.validations");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const client_1 = require("@prisma/client");
const router = express_1.default.Router();
router.get("/all-users", (0, auth_1.default)(client_1.UserRole.ADMIN), user_controllers_1.UserControllers.getAllUsers);
router.post("/create-user", (0, auth_1.default)(client_1.UserRole.ADMIN), (0, validationRequest_1.default)(user_validations_1.UserValidationSchemas.createValidation), user_controllers_1.UserControllers.createUser);
router.get("/get-user/:id", (0, auth_1.default)(client_1.UserRole.ADMIN), user_controllers_1.UserControllers.getSingleUser);
router.get("/my-profile", (0, auth_1.default)(client_1.UserRole.ADMIN, client_1.UserRole.USER), user_controllers_1.UserControllers.getMyProfile);
router.put("/update-user/:id", (0, auth_1.default)(client_1.UserRole.ADMIN), (0, validationRequest_1.default)(user_validations_1.UserValidationSchemas.updateValidation), user_controllers_1.UserControllers.updateUserWithAdmin);
router.put("/update/:id", (0, auth_1.default)(client_1.UserRole.ADMIN, client_1.UserRole.USER), (0, validationRequest_1.default)(user_validations_1.UserValidationSchemas.updateUserName), user_controllers_1.UserControllers.updateUserName);
router.delete("/delete-user/:id", (0, auth_1.default)(client_1.UserRole.ADMIN), user_controllers_1.UserControllers.deleteUser);
router.delete("/delete-multiple", (0, auth_1.default)(client_1.UserRole.ADMIN), (0, validationRequest_1.default)(user_validations_1.UserValidationSchemas.deleteMultipleUser), user_controllers_1.UserControllers.deleteMultipleUser);
router.get("/all-employee", (0, auth_1.default)(client_1.UserRole.ADMIN), user_controllers_1.UserControllers.getAllEmployee);
exports.UserRoutes = router;
